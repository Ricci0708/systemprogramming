1. parameter, return value, function name, header file
2. 744
3.d: directory
  l: symbloic link
  -: file
4.chmod 645
  chmod o+x
  chmod o=rx
5.-r--r-x-w- 452
6.022
7.프로그램 소유자
8.passwd = 나/root
  apt-get = root/root
9. softlink, doesnot effect anythong cause b is link file and a is original file
10. hardlink 
    -rwxr-wr-w 11 bob bob 172 (modified date)
11. 하드링크의 경우 원본파일을 삭제해도 그대로 남아있다. 하지만 하드링크의 경우 폴더를 링크 하지는 못한다. 파일시스템의 inode를 공유하는데 하나의 파일을 지운다고 사라지지 않는다.  같은 파일시스템에만 적용이 가능 
12. 6
    argv[0]: ./a.out
    argv[1]: a
    argv[2]: b
    argv[3]: 1
    argv[4]: 2
    argv[5]: love
13. 82 echo $? return값을 볼슁ㅆ다.
14. exit : 조금더 gentle
    _Exit(): 그냥 종료
15. atexit는 stack방식이라서 역순으로
    done
    1
    2
    2
16. a) fred.o libfoo.a program
    b) main.o libfoo.a
       ???

17. malloc: 프로그램에서 heap영역에서 메모리할당, 반드시 free해줘야함
    alloca : stack영역에서 메모리할당, 함수가 쓰고 있는 stack에 영역을 할당하기 때문에 함수의 리턴시점에 free가 됨
18. file1
    file3
    file2
19. thread
20. X
21. count = 10000
    count = 10000
22. 단순히 생각하면 20000이라고 생각할수있으나 쓰레드에서 동시에 접근을 해서 값이 예상보다 작게 나올수도 있다.
23.80000이 나올수도 있지만 80000보다 작게 나올것으로 예상된다.
24.a) pthread_mutex_lock(&pd->lock); ==> 키를 잠근다
      pthread_mutex_unlock(&pd->lock); ==> 키를 푼다
      pthread_mutex_init(&pd->lock,NULL); ==> 키를 초기화(생성)
   b) inti -> 7
      lock -> 4
      unlock -> 5
25.pthread join이 없다.
26.deadlock의 발생한다. thr_main1과 thr_main2에서 각각을 락을 하는데 이는 서로가 서로가 락을 하고 상대방이 언락을 해줄때까지 대기하고있는 상태가 되기때문에 deadlock이 된다.
